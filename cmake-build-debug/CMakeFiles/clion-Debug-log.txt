"C:\Program Files\JetBrains\CLion 2025.2\bin\cmake\win\x64\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=C:\Users\tyler\vcpkg\scripts\buildsystems\vcpkg.cmake -G "MinGW Makefiles" -DPython_EXECUTABLE=C:/Users/tyler/AppData/Local/Programs/Python/Python39/python.exe -DPython3_EXECUTABLE=C:/Users/tyler/AppData/Local/Programs/Python/Python39/python.exe -S C:\Users\tyler\CLionProjects\breast_cancer -B C:\Users\tyler\CLionProjects\breast_cancer\cmake-build-debug
-- Running vcpkg install
Detecting compiler hash for triplet x64-windows...
Compiler found: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe
The following packages are already installed:
    egl-registry:x64-windows@2024-01-25
    glew:x64-windows@2.2.0#6
    glfw3:x64-windows@3.4#1
    opengl:x64-windows@2022-12-04#3
    opengl-registry:x64-windows@2024-02-10#1
    stb:x64-windows@2024-07-29#1
    vcpkg-cmake:x64-windows@2024-04-23
    vcpkg-cmake-config:x64-windows@2024-05-23
egl-registry is header-only and can be used from CMake via:

  find_path(EGL_REGISTRY_INCLUDE_DIRS "EGL/egl.h")
  target_include_directories(main PRIVATE ${EGL_REGISTRY_INCLUDE_DIRS})

opengl-registry is header-only and can be used from CMake via:

  find_path(OPENGL_REGISTRY_INCLUDE_DIRS "GL/glcorearb.h")
  target_include_directories(main PRIVATE ${OPENGL_REGISTRY_INCLUDE_DIRS})

opengl-registry provides pkg-config modules:

  # Khronos OpenGL registry
  khronos-opengl-registry

The package opengl is compatible with built-in CMake targets via CMake v3.7 and prior syntax

    find_package(OpenGL REQUIRED)
    target_link_libraries(main PRIVATE ${OPENGL_LIBRARIES})
    target_include_directories(main PRIVATE ${OPENGL_INCLUDE_DIR})

and the CMake v3.8 and beyond imported target syntax

    find_package(OpenGL REQUIRED)
    target_link_libraries(main PRIVATE OpenGL::GL)

introduction of various components

    find_package(OpenGL REQUIRED COMPONENTS GL      # v3.8
                                            GLU     # v3.8
                                            GLX     # v3.10
                                            EGL     # v3.10
                                            OpenGL) # v3.10

The OpenGL SDK is highly platform dependent and is usually an OS component. It's not realistic to build from source for every platform.

    WINDOWS: is part of the Windows SDK which this package installs.
    LINUX: the SDK may be installed from your distro's repo or from 3rd parties manually. There are too many to count.
    APPLE: consult your distribution vendor on the state of OpenGL support: https://support.apple.com/en-us/HT202823

The package glew is compatible with built-in CMake targets:

    find_package(GLEW REQUIRED)
    target_link_libraries(main PRIVATE GLEW::GLEW)

glfw3 provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(glfw3 CONFIG REQUIRED)
  target_link_libraries(main PRIVATE glfw)

glfw3 provides pkg-config modules:

  # A multi-platform library for OpenGL, window and input
  glfw3

The package stb provides CMake targets:

    find_package(Stb REQUIRED)
    target_include_directories(main PRIVATE ${Stb_INCLUDE_DIR})
All requested installations completed successfully in: 4.56 ms
-- Running vcpkg install - done
-- Configuring done (24.3s)
-- Generating done (0.3s)
-- Build files have been written to: C:/Users/tyler/CLionProjects/breast_cancer/cmake-build-debug
